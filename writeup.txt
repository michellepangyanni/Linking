COMP 321 Project 3: Linking
<Michelle Pang, yp29; >

---(Do not write lines of text that exceed the width of this line.)------------

PROBLEM 7.6

Symbol          swap.o .symtab entry?       Symbol Type     Module      Section
buf             yes                         extern          m.o         .data
bufp0           yes                         global          swap.o      .data
bufp1           yes                         local           swap.o      .bss
swap            yes                         global          swap.o      .text
temp            no                          --              --          --
incr            yes                         local           swap.o      .text
count           yes                         local           swap.o      .bss

PROBLEM 7.9

Since the execution of the program involves two objects named main, the 
strong implementation in foo6.c overrides the weak definition in bar6.c. 
The address printed is associated with the function main, not the char, 
explaining why it printed a result when main had not yet been initialized. 
A certain amount of memory is allocated for the machine code instructions, 
the byte that is print out is the first byte of the function memory, so it 
has a value. 


PROBLEM 7.12

A. The value of the relocated reference to swap in the callq instruction is 0xa.

ADDR(s) = ADDR(.text) = 0x4004e0
and
ADDR(r.symbol) = ADDR(swap) = 0x4004f8
refaddr = ADDR(s) + r.offset
	= 0x4004e0 + 0xa
	= 0x4004ea
*refptr = (unsigned) (ADDR(r.symbol) + r.addend - refaddr)
	= (unsigned) (0x4004f8 + (-4) - 0x4004ea)
	= (unsigned) (0xa)
    = 0xa
					
B. The value of the relocated reference to swap in the callq instruction is 0x22. 
ADDR(s) = 0x4004d0
and
ADDR(r.symbol) = ADDR(swap) = 0x400500
refaddr = ADDR(s) + r.offset
	= 0x4004d0 + 0xa
	= 0x4004da
*refptr = (unsigned) (ADDR(r.symbol) +r.addend - refaddr)
	= (unsigned) (0x400500 + (-4) - 0x4004da)
	= 0x22

READJCF

TESTING STRATEGY

<Replace with a detailed description of your testing strategy.>

TWO THINGS I LEARNED

<Replace with a description of two features of C that are used in the
 provided code for this assignment but weren't taught in lecture or lab
 that you learned about while completing this assignment.>


parse file use fread to 
process -jcf-constant-pool()
print-jcf-constant()//recursion to solve : check type of data. If is terminal, print it out, not: go another layer
destory-jcf-constant-pool is used to free memory. 
use different struct (malloc) to pass different sizes. 

CODE:
1. header, body
2. java 


